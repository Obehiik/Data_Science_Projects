---
title: "Longitudinal Analysis"
author: "Obehi Winnifred Ikpea"
date: today
format:
  html:
    theme: cosmo
    css: style.css
    toc: true
    toc-depth: 2
    toc-title: "Contents"
    number-sections: true
    number-depth: 1
    highlight-style: github
    code-fold: true
    self-contained: true
    cite-method: citeproc
    bibliography-heading: References
    smooth-scroll: true
    anchor-sections: true
    fig-cap-location: bottom
    crossref:
      appendix-title: "Appendix"
      appendix-delim: ":"
execute:
  echo: false
  warning: false
  message: false
  cache: true
bibliography: references4.bib
csl: apa.csl
---

```{r echo=FALSE}
# Load necessary libraries
library(labelled)   # labeling data
library(rstatix)    # summary statistics
library(ggpubr)     # convenient summary statistics and plots
library(GGally)     # advanced plots
library(car)        # useful for ANOVA/Wald tests
library(Epi)        # easy CI for model coefficients/predictions
library(lme4)       # linear mixed-effects models
library(lmerTest)   # tests for linear mixed-effects models
library(emmeans)    # marginal means
library(multcomp)   # CI for linear combinations of model coefficients
library(geepack)    # generalized estimating equations
library(ggeffects)  # marginal effects, adjusted predictions
library(gt)         # nice tables
library(tidyverse)  # for data manipulation, visualization, and more
library(readr)      # to read CSV files
library(nlme)       # for mixed-effects models
library(reshape2)   # data reshaping
library(ggplot2)    # for data visualization
library(tidyr)      # for tidying data
library(dplyr)      # data manipulation
library(kableExtra) # enhanced tables
library(corrplot)   # for correlation matrix visualization
library(joineR)     # joint modeling of longitudinal and survival data
library(MASS)       # for statistical functions
library(lattice)    # for trellis graphics
library(gtsummary)  # for summary tables

# Set the theme for ggplot
theme_set(theme_minimal() + theme(legend.position = "bottom"))

# Load the data
framingham <- read_csv("framingham (2).csv")
framingham$sex <- factor(framingham$sex, levels = c("1", "2"), labels = c("Male", "Female"))
framingham<-replace_with_na(framingham)

```

# Introduction

# Methods

## Data Preparation

```{r echo=FALSE}
framingham <- framingham|>
  mutate(across(dplyr::num_range("chol", 0:10), ~ na_if(.x, -9)))|>drop_na()


framingham_longer <- framingham |>
  mutate(id=row_number())|>
  pivot_longer(
    cols = starts_with("chol"), 
    names_to = "levels", 
    values_to = "cholesterol"
  ) |>
  mutate(
    year = as.integer(parse_number(levels)),
    levels = fct_inorder(paste("Cholesterol level at year", year)
  ))

head(framingham_longer)
```

## Exploratory Data Analysis



```{r echo=FALSE}
summary<-framingham_longer|>group_by(year)|>get_summary_stats(cholesterol, show=c("n", "min", "max", "mean", "sd"))
formatted_summary<- summary |>
  gt() |>
  tab_header(
    title = "Cholesterol Summary Statistics by Year"
  ) |>
  fmt_number(
    columns = vars(mean, sd, min, max),
    decimals = 1
  ) |>
  cols_label(
    year = "Year",
    n = "Count",
    min = "Min",
    max = "Max",
    mean = "Mean",
    sd = "SD"
  ) |>
  tab_spanner(
    label = "Cholesterol Statistics",
    columns = vars(min, max, mean, sd)
  ) |>
  opt_table_font(
    font = "Arial"
  ) |>
  opt_align_table_header(
    align = "left"
  ) |>
  opt_table_lines()

summary
```

```{r echo=FALSE}
summary_framinghan_long <- framingham_longer|>mutate(year=as.integer(year))|>
  summarize(mean_cholesterol = mean(cholesterol), .by = c(year, sex))

## Plot of means

pal2use <- c("navy", "lightpink")

mean_plot <- ggplot(data = summary_framinghan_long, 
                    aes(x =year, y = mean_cholesterol, group = sex, colour = sex)) +
  geom_line() + 
  geom_point(size = 3) +
  scale_colour_manual(values = pal2use) +
  labs(
    x = "Year",
    y = "Mean Serum Cholesterol Level",
    title = "Mean Serum Cholesterol Levels by Year and Sex"
  ) +
  theme_bw() +
  theme(
    plot.title = element_text(hjust = 0.5),
    legend.title = element_blank() 
  ) +scale_x_continuous(breaks = seq(0, 10, by = 2))

```

```{r echo=FALSE}
spaghetti_plot_full<-ggplot(data = framingham_longer|>mutate(year=as.integer(year)), 
       aes(x = year, y = cholesterol, group = id), fill="blue") +
  geom_line(alpha = 0.6, size = 1) +
  labs(
    title = "Serum Cholesterol Levels Over Time",
    x = "Year",
    y = "Serum Cholesterol Level (mg/dL)",
    colour = "Sex"
  ) +
  theme_bw() +
  theme(
    plot.title = element_text(hjust = 0.5, size = 16),
    legend.position = "top",
    legend.title = element_text(size = 12),
    legend.text = element_text(size = 10),
    axis.text = element_text(size = 10),
    axis.title = element_text(size = 12)
  ) +  
  scale_colour_manual(values = pal2use) +  scale_x_continuous(breaks = seq(0, 10, by = 2)) 

```

```{r echo=FALSE}
spaghetti_plot_stratified<-ggplot(data = framingham_longer|>mutate(year=as.integer(year)), 
       aes(x = as.integer(year), y = cholesterol, group = id, colour = sex)) +
  geom_line(alpha = 0.6, size = 1) +facet_wrap(~sex)+
  theme_bw() +
  theme(
    plot.title = element_text(hjust = 0.5, size = 16),
    legend.position = "top",
    legend.title = element_text(size = 12),
    legend.text = element_text(size = 10),
    axis.text = element_text(size = 10),
    axis.title = element_text(size = 12)
  ) +  
  scale_colour_manual(values = pal2use) +  scale_x_continuous(name="Time from baseline (Years)",breaks = seq(0, 10, by = 2))+ scale_y_continuous(name="Serum Cholesterol levels (mg/dL)")
```

```{r echo=FALSE}
subject_plot<-framingham_longer|>mutate(year=as.integer(year))|>filter(id<=20)|>
ggplot(aes(x = year, y = cholesterol, group = id, colour = sex)) +
  facet_wrap(~ id, ncol = 6) +  # Facet by subject ID with 6 columns
  geom_line(size = 1) + 
  geom_point(size = 2) +
  labs(
    x = "Year",
    y = "Serum Cholesterol Levels (mg/dL)",
    colour = "Sex"
  ) +
  theme_bw() +
  theme(
    strip.text = element_text(size = 8),  # Adjust facet label text size
    axis.text = element_text(size = 10),
    axis.title = element_text(size = 12),
    legend.position = "bottom"  # Move legend to the bottom
  ) +
  scale_colour_manual(values = pal2use)  + scale_x_continuous(breaks = seq(0, 10, by = 2)) 

```





# Results

## Exploratory Data Analysis

### Summary Statistics of Serum Cholesterol Levels Over Time
```{r echo=FALSE}
formatted_summary
```

### Plots

::: {layout-ncol=2}
::: column
#### Plot of Mean Serum Cholesterol Levels by Sex
```{r echo=FALSE}
mean_plot
```
:::

::: column
#### Spaghetti Plot of Serum Cholesterol Levels
```{r echo=FALSE}
spaghetti_plot_full
```
:::

::: column
#### Spaghetti Plot of Serum Cholesterol Levels Stratified by Sex
```{r echo=FALSE}
spaghetti_plot_stratified
```
:::

::: column
#### Subject-Specific Serum Cholesterol Level Plots
```{r echo=FALSE}
subject_plot
```
:::


## Statistical Analysis
```{r}
colnames(framingham_longer)
mod1<-lme(cholesterol~age+bmi0+year+sex*year+bmi0*year, method=)
```

